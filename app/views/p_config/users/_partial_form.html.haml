.wrapper.top
  .grid_4.first.panel.padding1.background_gray_clear
    %h3
      = t :new_user
    .form
      = f.fields_for :person, @person do |p|
        .clearfix
          =p.label :name
          =p.text_field :name, :required => true
        .clearfix
          =p.label :last_name
          =p.text_field :last_name, :required => true
      .clearfix
        = f.label :login 
        = f.text_field :login, :required => true
      - if params[:user_type] == "is_manager"
        .clearfix
          = f.label :password 
          = f.password_field :password, :required => true
        .clearfix
          = f.label :password_confirmation
          = f.password_field :password_confirmation, :required => true
      - else
        .clearfix
          = f.label :password 
          = f.password_field :password, :class => :only_numbers, :maxlength => 4, :placeholder => t("only_numbers"), :required => true
        .clearfix
          = f.label :password_confirmation
          = f.password_field :password_confirmation, :class => :only_numbers, :maxlength => 4, :placeholder => t("only_numbers"), :required => true
      .clearfix
        = f.label :email
        = f.text_field :email, :required => true
      .clearfix
        = f.label :is_enabled
        = f.check_box :is_enabled
      .clearfix
        - if params[:user_type] == "is_manager"
          = f.label :is_manager
          = f.check_box :is_manager, :checked => @user.id.blank? ? true : @user.is_manager?
        - else
          = f.label :is_operator
          = f.check_box :is_operator, :checked => @user.id.blank? ? true : @user.is_operator?
      .clearfix
        = f.label :station_id
        = f.collection_select :station_id, PConfig::Station.is_enabled.nullo.sort_by(&:name).if_nil([]), :id, :name, {:include_blank => :true, :required => true}
      %hr/
      .ar
        .clearfix.top
          %button.button.background_orange.white{:type => "submit"}
            = t :save
          %button.button.background_gray.gray{:type => "reset"}
            = t :clear
          %a.button.background_gray.gray{:href => p_config_users_path(:user_type=>params[:user_type] )}
            = t :cancel
  .grid_1.top
    .panel.padding1{:style => "height:220px;"}
      %table.style.full
        %thead
          %tr{:style => "text-align:center;"}
            %th
              = t "Role"
        %tbody.add_stations
  .grid_2.top
    .panel.padding1.background_gray_clear
      %table
        %tr
          %td
            = t "Roles"
        %tr
          %td
            = select_tag :select_group_id, options_for_select(Permission.all.map{|row| [row.name, row.name]}), :size =>11, :style => "width:150px;"
:javascript
  var index = 0;
  function remove_group(textName){
    $("#tr_"+textName).remove(); 
    $("#select_group_id").append('<option value="' + textName +'">' +  textName + '</option>');
  }
  $(document).ready(function(){
    chargeItems();
    $('#select_group_id').click(function(e) {
      var permissionId =$(this).find("option:selected").val() ;  
      add_group(permissionId);
    });
    function chargeItems(){
      for (var i = 0, f; f = "#{@array_name.join(",")}".split(",")[i]; i++) {
        add_group(f);
        $("#select_group_id").find("option[value='" + f + "']").remove();
      }
    }
    function add_group(text){    

      prefixId = "p_config_user_roles_attributes_"+index+"_title";
      prefixName = "p_config_user[roles_attributes]"+"["+index+"]"+"[title]";
      
      element = "<tr onclick='remove_group(&quot;"+text+"&quot;);' id='tr_"+ text +"'><td>";
      element += "<input id='" + prefixId + "' name='" + prefixName + "' value='" + text + "' type='hidden'/>";
      element += "<text_field style='text-align:center;'>" + text + "</text_field>";
      element += "</td></tr>";
      
      $(".add_stations").append(element);
      $("#select_group_id").find("option:selected").remove();
      index += 1;
    }
  });
