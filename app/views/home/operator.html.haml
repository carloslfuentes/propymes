.wrapper.top
  .grid_6.first
    .grid_6.first
      .panel.padding1
        %button.button.background_orange.white#startButton{:style => "width:195px; height:55px;"}
          %h2
            = t :start
        %button.button.background_gray.white#standbyButton{:class => "modal", :rel => "#stoppage", :style => "width:195px; height:55px;", :disabled => true}
          %h2
            = t :standby
          //Chronometer
        %h0.top.float_right
          #chronometer
        .clear
        //Add Items
        %hr.top
        .padding2
        #add_items.padding3
          .background_gray_clear
            .padding2
              = link_to image_tag("/images/d02/icons/addItem.png", :width => "64px", :style => "opacity:0.2; margin:0 0 0 66px;"), "#", :id=>"addItem", :action => "addItem"
              = link_to image_tag("/images/d02/icons/removeItem.png", :width => "64px", :style => "opacity:0.2; margin:0 0 0 57px;"), "#", :id=>"removeItem", :action => "removeItem"
              %h0.gray.top.float_right
                .top#number_piece
                  = @working_day.nullo.number_piece.if_nil("--").to_i.to_s
          .clear
    //Chart 
    .grid_6.panel.first.top.background_gray_clear
      .chart#rate_graph
  //Panel Right
  .grid_2
    .panel.padding1.gray
      %h3
        = t :selected_product
      .ac
        .padding2
          %h3.background_gray_clear#selectProduct
            = @working_day.product.nullo.name.if_nil(t(:not_product_selected))
    
    //Work Times
    .panel.padding1.gray.top
      %h3
        = PConfig::WorkTime.model_name.human(:count => :other)
      %table.full.not-style
        %tr
          %td
            = PConfig::WorkTime.model_name.human(:count => 1)
          %td.bold.ar{:style => "font-size:15px"}
            = PConfig::WorkTime.total_hours.utc.strftime "%H:%M:%S"
        %tr
          %td
            = PConfig::BootVariable.model_name.human(:count => 2)
          %td.bold.ar{:style => "font-size:15px"}
            = PConfig::BootVariable.get_time_sum(@working_day.standard.nullo.boot_variables.only_start_variable.if_nil([])).strftime("%H:%M:%S")
        %tr
          %td
            = t :available_time
          %td.bold.ar#disponible_time{:style => "font-size:15px"}
            = @working_day.disponible_time.present? ? (OperationTimes::Deduct.basic(@working_day.disponible_time,@working_day.station.get_sum_effective_time)) : "00:00:00" 
        %tr
          %td
            = t :effective_time
          %td.bold.ar#effective_time{:style => "font-size:15px"}
            = @working_day.station.get_sum_effective_time.present? ? @working_day.station.get_sum_effective_time : "00:00:00"
        %tr
          %td
            = t :delayed_time
          %td.red.bold.ar#delayed_time{:style => "font-size:15px"}
            = @working_day.delayed_time.present? ? (@working_day.delayed_time.utc.strftime "%H:%M:%S") : "00:00:00"
    
    //Progress Production
    .panel.padding1.gray.top
      %h3
        = t :baseline
      .scroll#progress
        - @working_days.each_with_index do |working_day, index|
          - if index > 0
            %hr/
          .top
            %h5
              = working_day.product.nullo.name.if_nil("N/P")
            %progress{:value => working_day.nullo.number_piece.if_nil(0), :max => working_day.nullo.target_pieces.if_nil(1)}
            .al.float_left
              = working_day.nullo.number_piece.to_i.if_nil(0)
            .ar
              = working_day.nullo.target_pieces.if_nil(1)
      
    //Events
    .panel.padding1.gray.top
      %h3
        = PConfig::Event.model_name.human(:count => :other)
      %table.full.not-style
        - @station.events.each do |event|
          %tr.background_gray_clear
            %td.ac
              %h6
                = event.stoppage.name
              .ac.not_bold
                = event.stoppage.name
      //Stop
      //%hr/
      //.padding3.top.ac
      //  %a.button.background_red.white#stopButton{:style => "width:120px; height:40px;", :onclick => "$('#chronometer').chronometer({action:'stop', working_day_id:'#{@working_day.id}'});"}
      //    %h2
      //      = t :stop

//Validate Working Day
#change_product.widget.panel.padding3.background_gray_clear{:style => "height:70px;"}
  .content
    .form
      .clearfix
        = label_tag PConfig::Product.model_name.human(:count => :other)
        = select_tag :product_id, options_for_select(PConfig::Product.for_station(request.ip).map{|prod| [prod.name, prod.id]})
      %hr/
      .ar.top
        %button.button.background_green.white{:href => "#", :id => "submitChangeProduct"}
          = t :add
        - if @working_day.product_id.present?
          %a.button.background_gray.gray{:href => "#", :onclick => "$().closeModal();"}
            = t :cancel

//StopPage
#stoppage.widget.panel.padding3.background_gray_clear{:style => "width:606px;"}
  .content{:style => "width:606px;"}
    - PConfig::Stoppage.all.each do |stoppage|
      .clearfix
        %button.button.white.float_left{:style => "width:195px; height:65px; margin: 0 5px 0 0; background:" + stoppage.color.to_s, :id => "startStoppage", :stoppage_id => stoppage.id, :description => stoppage.name}
          %h2
            = stoppage.name

.clear
#push

:javascript
  $(document).ready(function() {
    //Validate Working Day
    $("#change_product").validateStatus("#{@working_day.id}");
    
    //Change Product
    $("#submitChangeProduct").live("click", function(){
      $.get("/home/change_product",{ product_id:$("#product_id").val(), working_day_id:#{@working_day.id} }).done(function(data){
        if(data){
          $(this).closeModal();
          $("#selectProduct").html(data["select_product"]);
          $('#chronometer').chronometer({action:'boot_variable'});
        }
      });
    });
    
    //Start Chronometer
    $("#startButton").live("click", function(){
      var chrono = $('#chronometer'),
          chrono_text = $('#chronometer').text();
      if(chrono_text){
        chrono.chronometer({action:'start', hours:chrono_text.split(":")[0], minutes:chrono_text.split(":")[1], seconds:chrono_text.split(":")[2], working_day_id:'#{@working_day.id}'});
      }else{
        chrono.chronometer({action:'start', hours:'#{@working_day.effective_time.hour}', minutes:'#{@working_day.effective_time.min}', seconds:'#{@working_day.effective_time.sec}', working_day_id:'#{@working_day.id}'});
      }
      this.setAttribute('class','button background_orange white');
      this.setAttribute('disabled',true);
      //StandBy Button
      standbyButton = $("#standbyButton");
      standbyButton.attr('class','button background_yellow white');
      standbyButton.removeAttr('disabled');
      //We Enable Buttons
      $("#addItem, #removeItem").find("img").css("opacity", 1);
      //Hidden Btn Change Product
      $("#btn_change_product").fadeOut(300);
    });
    
    //Chart Rate Graph Init 
    $("#rate_graph").Chart(#{@rate_graph.to_json}, {type:"LineChart", tooltips:false, showLegend:true, formatX:'%X'},{ top:20, right:30, bottom:20, left:30 });
    
    //Add Items
    $('#addItem, #removeItem').live("click", function() {
      action = $(this).attr("action");
      number_piece = action == "addItem" ? 1 : -1
      console.log($('#chronometer').text());
      $.post("/home/add_items",{number_piece:number_piece, time:$('#chronometer').text(),working_day_id:#{@working_day.id}}).done(function(data){
        //Disponible Time
        $("#disponible_time").html(data["disponible_time"]);
        
        // Effective Time
        $("#effective_time").html(data["effective_time"]);
        
        // Delayed Time
        $("#delayed_time").html(data["delayed_time"]);
        
        //Progress
        var working_days = "",
            progress = $("#progress");
        
        $.each(data["working_days"], function(index, value){
          working_days += "<hr/>"
          working_days += "<div class='top'>"
          working_days += "<h3>" + value["0"]["product"] + "</h3>"
          working_days += "<progress max=" + value["0"]["max"] + " value=" + value["0"]["value"] + "/>"
          working_days += "<div class='al float_left'>" + value["0"]["value"] + "</div>"
          working_days += "<div class='ar'>" + value["0"]["max"] + "</div>"
          working_days += "</div>"
        });
        
        progress.empty();
        progress.append(working_days);
        
        //Number Piece
        $("#number_piece").html(data["number_piece"]);
        
        //Rate Graph
        graph = $("#rate_graph").empty();
        graph.Chart(eval(data["rate_graph"]), {type:"LineChart", tooltips:false, showLegend:true, formatX:'%X'},{ top:20, right:30, bottom:20, left:30 });
      });
    });
    
    //Stoppage
    $("#startStoppage").live("click", function(){
      $.post("/p_config/stoppages/start_stoppages",{id: $(this).attr("stoppage_id"), description: $(this).attr("description"), working_day_id:'#{@working_day.id}' }).done(function(data){
        if(data){
          $(this).closeModal();
          //Stop Chronometer
          $('#chronometer').chronometer({action:'standby', working_day_id:'#{@working_day.id}'});
          //Standby Button
          standbyButton = $("#standbyButton");
          standbyButton.attr('class','button background_gray white');
          standbyButton.attr('disabled',true);
          //Start Button
          startButton = $("#startButton");
          startButton.attr('class','button background_orange white');
          startButton.removeAttr('disabled');
          //We Enable Buttons
          $("#addItem, #removeItem").find("img").css("opacity", 0.2);
          //Show Btn Change Product
          $("#btn_change_product").fadeIn(300);
          //Resgresar valores y
          //Actualizar
        }
      });
    });
    
    //setTimeout(function() { 
      //alert("aqui se tiene que detener el cronometro y ponerse en stanby");
    //}, parseInt(6000));
    
  });
