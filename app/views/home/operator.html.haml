.wrapper.top
  .grid_6.first
    .grid_6.first
      .panel.padding1
        %button.button.background_orange.white#startButton{:style => "width:195px; height:55px;"}
          %h2
            = t :start
        %button.button.background_gray.white#standbyButton{:class => "modal", :rel => "#stoppage", :style => "width:195px; height:55px;", :disabled => true}
          %h2
            = t :standby
        //Chronometer
        %h0.top.float_right
          #chronometer
        .clear
        %hr.top
        //Add Items
        #add_items.padding3
          .background_gray_clear
            .padding2
              = link_to image_tag("/images/d02/icons/addItem.png", :width => "64px", :style => "opacity:0.2; margin:0 0 0 66px;"), "#", :id=>"addItem", :action => "addItem"
              = link_to image_tag("/images/d02/icons/removeItem.png", :width => "64px", :style => "opacity:0.2; margin:0 0 0 57px;"), "#", :id=>"removeItem", :action => "removeItem"
              %h0.gray.top.float_right
                .top#number_piece
                  = @working_day.nullo.number_piece.if_nil("--").to_i.to_s
          .clear
        //StopPage Events
        #stoppage_events.flash.error{:style => "display:none;"}
        
    //Chart 
    .grid_6.panel.first.top.background_gray_clear
      .chart#rate_graph
  //Panel Right
  .grid_2
    .panel.padding1.gray
      %h3
        = t :selected_product
      .ac
        .padding2
          %h3.background_gray_clear#selectProduct
            = @working_day.product.nullo.name.if_nil(t(:not_product_selected))
    
    //Work Times
    .panel.padding1.gray.top
      .ac.bold{:style => "font-size:13px;"}
        = "[ " + PConfig::WorkTime.first.first_hour.utc.strftime("%H:%M") + " - " + PConfig::WorkTime.first.last_hour.utc.strftime("%H:%M") + " ]"
    
    .panel.padding1.gray.top
      %h3
        = PConfig::WorkTime.model_name.human(:count => :other)
      %table.full.not-style
        %tr
          %td
            = PConfig::WorkTime.model_name.human(:count => 1)
          %td.bold.ar{:style => "font-size:15px"}
            = PConfig::WorkTime.total_hours.utc.strftime "%H:%M:%S"
        %tr
          %td
            = PConfig::BootVariable.model_name.human(:count => 2)
          %td.bold.ar#boot_variable{:style => "font-size:15px"}
            = PConfig::BootVariable.get_time_sum(@working_day.standard.nullo.boot_variables.only_start_variable.if_nil([])).strftime("%H:%M:%S")
        %tr
          %td
            = t :available_time
          %td.bold.ar#disponible_time{:style => "font-size:15px"}
            = @working_day.disponible_time.present? ? (OperationTimes::Deduct.basic(@working_day.disponible_time,@working_day.station.get_sum_effective_time)) : "00:00:00" 
        %tr
          %td
            = t :effective_time
          %td.bold.ar#effective_time{:style => "font-size:15px"}
            = @working_day.station.get_sum_effective_time.present? ? @working_day.station.get_sum_effective_time : "00:00:00"
        %tr
          %td
            = t :delayed_time
          %td.red.bold.ar#delayed_time{:style => "font-size:15px"}
            = @working_day.delayed_time.present? ? (@working_day.delayed_time.utc.strftime "%H:%M:%S") : "00:00:00"
    
    //Progress Production
    .panel.padding1.gray.top
      %h3
        = t :baseline
      .scroll#progress
        - @working_days.each_with_index do |working_day, index|
          - if index > 0
            %hr/
          .top
            %h5
              = working_day.product.nullo.name.if_nil("N/A")
            %progress{:value => working_day.nullo.number_piece.if_nil(0), :max => working_day.nullo.target_pieces.if_nil(1)}
            %table.full
              %tbody
                %tr
                  %td.al{:style => "width:40px;"}
                    = working_day.nullo.number_piece.to_i.if_nil(0)
                  %td.ac.bold.orange
                    = "EFF. " + working_day.nullo.percentage_production.if_nil(0).to_s + " %"
                  %td.ar{:style => "width:40px;"}
                    = working_day.nullo.target_pieces.if_nil(1)
    
    //Events
    .panel.padding1.gray.top
      %h3
        = PConfig::Event.model_name.human(:count => :other)
      %table.full.not-style
        - @station.events.each do |event|
          %tr.background_gray_clear
            %td.ac
              %h6
                = event.stoppage.name
              .ac.not_bold
                = event.stoppage.name

//Change Product
#change_product.widget.panel.padding3.background_gray_clear{:style => "height:70px;"}
  .content
    .form
      .clearfix
        = label_tag PConfig::Product.model_name.human(:count => :other)
        = select_tag :product_id, options_for_select(PConfig::Product.for_station(request.ip).map{|prod| [prod.name, prod.id]})
      %hr/
      .ar.top
        %button.button.background_green.white{:href => "#", :id => "submitChangeProduct"}
          = t :add
        - if @working_day.product_id.present?
          %a.button.background_gray.gray{:href => "#", :onclick => "$().closeModal();"}
            = t :cancel

//StopPage
#stoppage.widget.panel.padding3.background_gray_clear{:style => "width:606px;"}
  .content{:style => "width:606px;"}
    .clearfix
      %button.button.background_red.white.float_left{:style => "width:194px; height:65px; margin: 0 5px 0 0;", :id => "startStoppage", :action => "change_product"}
        %h2
          = t :change_product
    .clearfix
      %button.button.background_red.white.float_left{:style => "width:194px; height:65px; margin: 0 5px 0 0;", :id => "startStoppage", :action => "stop"}
        %h2
          = t :finish_work
    - PConfig::Stoppage.all.each do |stoppage|
      .clearfix
        %button.button.white.float_left{:style => "width:194px; height:65px; margin: 0 5px 0 0; background:" + stoppage.color.to_s, :id => "startStoppage", :stoppage_id => stoppage.id, :action => "standby"}
          %h2
            = stoppage.name.to_s + " [" + (stoppage.time.utc.strftime "%H:%M") + "]"

//StopPageEvent
#stoppage_event.widget.panel.padding3.background_gray_clear{:style => "height:120px;"}
  .content
    .stoppage_time
    %hr/
    .ar.top
      %a.button.background_gray.gray{:href => "#", :onclick => "$().closeModal();"}
        = t :finish

.clear
#push

:javascript
  $(document).ready(function() {
    
    //Global Vars ** Working Day And Times
    destroy_localStorage();
    if(typeof(localStorage["working_day_id"]) == "undefined"){
      localStorage.working_day_id = "#{@working_day.id}";
      localStorage.effectiveTime_hours = "#{@working_day.effective_time.hour}";
      localStorage.effectiveTime_minutes = "#{@working_day.effective_time.min}";
      localStorage.effectiveTime_seconds = "#{@working_day.effective_time.sec}";
    }
    
    //Validate Working Day
    $("#change_product").validateStatus(localStorage.working_day_id);
    
    //Chart Rate Graph Init 
    $("#rate_graph").Chart(#{@rate_graph.to_json}, {type:"LineChart", tooltips:false, showLegend:true, formatX:'%X'},{ top:20, right:30, bottom:20, left:30 });
    
    //Change Product FIXME Quitar El Primer POST y Manejarlo desde el chrono.
    $("#submitChangeProduct").live("click", function(){
      $.post("/home/timer_actions",{selectedAction:"change_product", product_id:$("#product_id").val(), working_day_id:localStorage.working_day_id }).done(function(data){
        if(data){
          //Select Product
          $("#selectProduct").html(data["select_product"]);
          
          //Close Modal
          $(this).closeModal();
          
          //Working Day
          localStorage.working_day_id = data["working_day_id"];
          localStorage.effectiveTime_hours = data["effectiveTime_hours"];
          localStorage.effectiveTime_minutes = data["effectiveTime_minutes"];
          localStorage.effectiveTime_seconds = data["effectiveTime_seconds"];
          
          //Load Chronometer Boot Variable
          $('#chronometer').chronometer({action:'boot_variable', working_day_id:localStorage.working_day_id});
        }
      });
    });
    
    // --------------------------
    // --- Operators
    // --------------------------
    
    //Start Chronometer
    $("#startButton").live("click", function(){
      //Start Chronometer
      $('#chronometer').chronometer({action:'start', hours:localStorage.effectiveTime_hours , minutes:localStorage.effectiveTime_minutes , seconds:localStorage.effectiveTime_seconds , working_day_id:localStorage.working_day_id });
      
      this.setAttribute('class','button background_gray white');
      this.setAttribute('disabled',true);
      //StandBy Button
      standbyButton = $("#standbyButton");
      standbyButton.attr('class','button background_yellow white');
      standbyButton.removeAttr('disabled');
      //We Enable Buttons
      $("#addItem, #removeItem").find("img").css("opacity", 1);
      //Hidden Btn Change Product
      $("#btn_change_product").fadeOut(300);
    });
    
    //Add & Remove Items
    $('#addItem, #removeItem').live("click", function() {
      action = $(this).attr("action");
      number_piece = action == "addItem" ? 1 : -1
      $.post("/home/timer_actions",{selectedAction:"add_item", number_piece:number_piece, time:$('#chronometer').text(), working_day_id:localStorage.working_day_id }).done(function(data){
        //Reload Timers
        $(this).reloadTimers(data);
        
        //Progress
        var working_days = "",
            progress = $("#progress");
        
        $.each(data["working_days"], function(index, value){
          working_days += "<hr/>"
          working_days += "<div class='top'>"
          working_days += "<h3>" + value["0"]["product"] + "</h3>"
          working_days += "<progress max=" + value["0"]["max"] + " value=" + value["0"]["value"] + "/>"
          working_days += "<div class='al float_left'>" + value["0"]["value"] + "</div>"
          working_days += "<div class='ar'>" + value["0"]["max"] + "</div>"
          working_days += "</div>"
        });
        
        progress.empty();
        progress.append(working_days);
        
        //Number Piece
        $("#number_piece").html(data["number_piece"]);
        
        //Rate Graph
        graph = $("#rate_graph").empty();
        graph.Chart(eval(data["rate_graph"]), {type:"LineChart", tooltips:false, showLegend:true, formatX:'%X'},{ top:20, right:30, bottom:20, left:30 });
      });
    });
    
    //Stoppage
    $("#startStoppage").live("click", function(){
      //Close Modal
      $(this).closeModal();
      
      //Action
      action = $(this).attr("action");
      $('#chronometer').chronometer({action: action, working_day_id:localStorage.working_day_id, stoppage_id: $(this).attr("stoppage_id") });
      
      //Standby Button
      standbyButton = $("#standbyButton");
      standbyButton.attr('class','button background_gray white');
      standbyButton.attr('disabled',true);
      
      //Start Button
      startButton = $("#startButton");
      startButton.attr('class','button background_orange white');
      startButton.removeAttr('disabled');
      
      //We Enable Buttons
      $("#addItem, #removeItem").find("img").css("opacity", 0.2);
      
      //Show Btn Change Product
      $("#btn_change_product").fadeIn(300);
    });
    
    //Destroy LocalStorage
    function destroy_localStorage(){
      localStorage.removeItem('working_day_id');
      localStorage.removeItem('effectiveTime_hours');
      localStorage.removeItem('effectiveTime_minutes');
      localStorage.removeItem('effectiveTime_seconds');
      localStorage.removeItem('before_action');
    }
    
    //setTimeout(function() { 
      //alert("aqui se tiene que detener el cronometro y ponerse en stanby");
    //}, parseInt(6000));
    
    //Reiniciar cada accion a 0
    //get_averenge_time_second
    
  });
